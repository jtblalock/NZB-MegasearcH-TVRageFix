daemon off; # run in the foreground so supervisord can look after it
worker_processes 2;

user nobody nogroup;
pid /tmp/nginx.pid;
error_log /tmp/nginx.error.log;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    include mime.types;
    default_type application/octet-stream;
    access_log /tmp/nginx.access.log combined;
    sendfile on;

    upstream app_server {
        server unix:/tmp/gunicorn.sock fail_timeout=0;
        # For a TCP configuration:
        # server 192.168.0.7:8000 fail_timeout=0;
    }

    server {
  		listen 443 ssl;
        listen 80 default_server;

		ssl_certificate /opt/usntssearch/NZBmegasearch/certificates/server.crt;
		ssl_certificate_key /opt/usntssearch/NZBmegasearch/certificates/server.key;


        client_max_body_size 4G;
        server_name _;

        keepalive_timeout 5;

        # path for static files
        root /opt/usntssearch/NZBmegasearch/static/;

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }
		
		# Proxy download 
		  location ~* ^/warpme/http(s?)://(.*?)/(.*) {		
		  resolver 8.8.8.8;
		
		  # Do not allow people to mess with this location directly
		  # Only internal redirects are allowed
		  internal;

		  # Location-specific logging
		  access_log /tmp/internal_redirect.access.log combined;
		  error_log /tmp/internal_redirect.error.log warn;

		  # Extract download url from the request 
		  set $download_uri $3;
		  set $download_host $2;
		  set $download_protocol $1;
 		
		  # Compose download url
		  set $download_url http$download_protocol://$download_host/$download_uri?$args;

		  # Set download request headers
		  proxy_set_header Host $download_host;
		  proxy_set_header Authorization '';

		  #~ debug purposes
		  #~ add_header DBG_prot '$download_protocol';
		  #~ add_header DBG_host '$download_host';
		  #~ add_header DBG_uri '$download_uri';
		  #~ add_header DBG_fullurl '$download_url';
		  #~ add_header DBG_args '$args';		  
		  
		  # Do not touch local disks when proxying 
		  # content to clients
		  proxy_max_temp_file_size 0;

		  # Download the file and send it to client
		  proxy_pass $download_url;

		  
		}


        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            proxy_pass   http://app_server;
        }

        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /opt/usntssearch/NZBmegasearch/static/;
        }
    }
}
